plugins {
    id 'core.java-conventions'
}

import com.core.schema.tasks.GenerateSchemaTask

dependencies {
    api (
            project(':infrastructure'),
            project(':platform')
    )

    testFixturesApi (
            testFixtures(project(':infrastructure')),
            testFixtures(project(':platform'))
    )
}

tasks.register("generateSchema", GenerateSchemaTask) {
    schemaXml = "${projectDir}/src/main/resources/clob-schema.xml"
    outputDir = "${buildDir}/generated/schema"
}
sourceSets.main.java.srcDir new File(buildDir, 'generated/schema')
idea {
    module {
        generatedSourceDirs += file('${buildDir}/generated/schema/')
    }
}

compileJava.dependsOn('generateSchema')

task uberjar(type: Jar) {
    manifest {
        attributes "Main-Class": "com.core.platform.Main"
    }
    archiveBaseName = 'core'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}